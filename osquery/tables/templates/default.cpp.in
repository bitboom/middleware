// Copyright 2004-present Facebook. All Rights Reserved.

/*
** This file is generated. Do not modify it manually!
*/

#include <osquery/tables.h>
#include "osquery/core/virtual_table.h"

namespace osquery { namespace tables {

/// BEGIN[GENTABLE]
{% if class_name == "" %}\
osquery::QueryData {{function}}(QueryContext& request);
{% else %}
class {{class_name}} {
 public:
  static osquery::QueryData {{function}}(QueryContext& request);
};
{% endif %}\

class {{table_name_cc}}TablePlugin : public TablePlugin {
public:
  TableName name = "{{table_name}}";
  TableColumns columns = {
{% for column in schema %}\
    std::make_pair("{{column.name}}", "{{column.type.affinity}}")\
{% if not loop.last %}, {% endif %}
{% endfor %}\
  };

  QueryData generate(QueryContext& request) {
{% if class_name != "" %}\
    return osquery::tables::{{class_name}}::{{function}}(request);
{% else %}\
    return osquery::tables::{{function}}(request);
{% endif %}\
  }

public:
  {{table_name_cc}}TablePlugin() {}
  int attachVtable(sqlite3 *db) {
    return sqlite3_attach_vtable<{{table_name_cc}}TablePlugin>(db, name);
  }
  virtual ~{{table_name_cc}}TablePlugin() {}
};

REGISTER_TABLE("{{table_name}}", std::make_shared<{{table_name_cc}}TablePlugin>());
/// END[GENTABLE]

}}
